# Moat Configuration File
# This file contains all configuration options for the Moat reverse proxy
#
# Environment Variable Overrides:
# All configuration options can be overridden using environment variables with the AX_ prefix.
# For example: AX_SERVER_UPSTREAM=http://localhost:8080
#
# Available environment variables:
# - AX_SERVER_HTTP_ADDR, AX_SERVER_TLS_ADDR, AX_SERVER_UPSTREAM
# - AX_SERVER_HTTP_BIND, AX_SERVER_TLS_BIND (comma-separated)
# - AX_TLS_MODE, AX_TLS_ONLY, AX_TLS_CERT_PATH, AX_TLS_KEY_PATH
# - AX_ACME_DOMAINS, AX_ACME_WILDCARDS, AX_ACME_CONTACTS (comma-separated)
# - AX_ACME_USE_PROD, AX_ACME_DIRECTORY, AX_ACME_ACCEPT_TOS, AX_ACME_CA_ROOT
# - AX_REDIS_URL, AX_REDIS_PREFIX
# - AX_NETWORK_IFACE, AX_NETWORK_IFACES (comma-separated), AX_NETWORK_DISABLE_XDP
# - AX_ARXIGNIS_API_KEY, AX_ARXIGNIS_BASE_URL
# - AX_DOMAINS_WHITELIST (comma-separated)
# - AX_LOGGING_LEVEL
# - AX_CAPTCHA_SITE_KEY, AX_CAPTCHA_SECRET_KEY, AX_CAPTCHA_JWT_SECRET
# - AX_CAPTCHA_PROVIDER, AX_CAPTCHA_TOKEN_TTL, AX_CAPTCHA_CACHE_TTL

# Server Configuration
server:
  # HTTP server bind address (for ACME HTTP-01 challenges and regular HTTP traffic)
  http_addr: "0.0.0.0:80"

  # Additional HTTP bind addresses (overrides http_addr if set)
  http_bind: []

  # HTTPS reverse-proxy bind address
  tls_addr: "0.0.0.0:443"

  # Additional HTTPS bind addresses (overrides tls_addr if set)
  tls_bind: []

  # Upstream origin URL (required)
  upstream: "http://localhost:8080"

# TLS Configuration
tls:
  # TLS operating mode: disabled, acme, custom
  mode: "disabled"

  # Require TLS for application traffic (HTTP used only for ACME)
  only: false

  # Path to custom certificate (PEM) when using custom TLS mode
  cert_path: null

  # Path to custom private key (PEM) when using custom TLS mode
  key_path: null

# ACME Configuration
acme:
  # Domains for ACME certificate issuance and domain whitelist
  domains: []

  # Domain wildcard patterns for filtering
  wildcards: []

  # ACME contact addresses (mailto: optional)
  contacts: []

  # Use Let's Encrypt production directory instead of staging
  use_prod: false

  # Override ACME directory URL (useful for Pebble or other test CAs)
  directory: null

  # Explicitly accept the ACME Terms of Service
  accept_tos: false

  # Custom CA bundle for the ACME directory (PEM file)
  ca_root: null

# Redis Configuration
redis:
  # Redis connection URL for ACME cache storage
  url: "redis://127.0.0.1/0"

  # Namespace prefix for Redis ACME cache entries
  prefix: "ax:moat"

# Network Configuration
network:
  # The network interface to attach the XDP program to
  iface: "eth0"

  # Additional network interfaces for XDP attach (overrides iface if set)
  ifaces: []

  # Disable XDP packet filtering (run without BPF/XDP)
  disable_xdp: false

# Arx Ignis Configuration
arxignis:
  # API key for Arx Ignis service
  api_key: ""

  # Base URL for Arx Ignis API
  base_url: "https://api.arxignis.com/v1"

  # Captcha Configuration
  captcha:
    # Captcha site key for security verification
    site_key: null

    # Captcha secret key for security verification
    secret_key: null

    # JWT secret key for captcha token signing - openssl rand -base64 48
    jwt_secret: null

    # Captcha provider: hcaptcha, recaptcha, turnstile
    provider: "hcaptcha"

    # Captcha token TTL in seconds
    token_ttl: 7200

    # Captcha validation cache TTL in seconds
    cache_ttl: 300


# Domain Filtering
domains:
  # Domain whitelist (exact matches)
  whitelist: []

# Content Scanning
content_scanning:
  # Enable or disable content scanning
  enabled: false

  # ClamAV server address
  clamav_server: "localhost:3310"

  # Maximum file size to scan in bytes (10MB)
  max_file_size: 10485760

  # Content types to scan (empty means scan all)
  scan_content_types:
    - "text/html"
    - "application/x-www-form-urlencoded"
    - "multipart/form-data"
    - "application/json"
    - "text/plain"

  # Skip scanning for specific file extensions
  skip_extensions: []

  # Wirefilter expression to determine when to scan content
  # Default: scan POST and PUT requests
  # Examples:
  #   - "http.request.method eq \"POST\" or http.request.method eq \"PUT\""
  #   - "http.request.method eq \"POST\" and http.request.path contains \"/upload\""
  #   - "http.request.content_type contains \"multipart/form-data\""
  scan_expression: "http.request.method eq \"POST\" or http.request.method eq \"PUT\""

# Logging Configuration
logging:
  # Log level: error, warn, info, debug, trace
  level: "info"

