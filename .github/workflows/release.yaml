name: Moat release

on:
  push:
    tags:
      - v*
    paths:
      - '**/*.rs'
      - 'Dockerfile'
      - 'Cargo.toml'
      - 'Cargo.lock'
      - .github/workflows/release.yaml

env:
  MOAT_REGISTRY_IMAGE: ghcr.io/arxignis/moat

jobs:
  moat-prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.platforms.outputs.matrix }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create matrix
        id: platforms
        run: |
          echo "matrix=$(docker buildx bake -f docker-bake.hcl image-all --print | jq -cr '.target."image-all".platforms')" >>${GITHUB_OUTPUT}

      - name: Show matrix
        run: |
          echo ${{ steps.platforms.outputs.matrix }}

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.MOAT_REGISTRY_IMAGE }}
          tags: |
            type=sha,format=short
            type=match,pattern=v(\d+\.\d+\.\d+),group=1
            type=match,pattern=v(\d+\.\d+),group=1
            type=match,pattern=v(\d+),group=1
            type=raw,value=latest

      - name: Rename meta bake definition file
        run: |
          mv "${{ steps.meta.outputs.bake-file }}" "${{ runner.temp }}/moat-bake-meta.json"

      - name: Upload meta bake definition
        uses: actions/upload-artifact@v4
        with:
          name: moat-bake-meta
          path: ${{ runner.temp }}/moat-bake-meta.json
          if-no-files-found: error
          retention-days: 1

  moat-build:
    runs-on: ${{ matrix.platform == 'linux/arm64' && 'ubuntu-24.04-arm' || 'ubuntu-latest' }}
    needs:
      - moat-prepare
    strategy:
      fail-fast: false
      matrix:
        platform: ${{ fromJson(needs.moat-prepare.outputs.matrix) }}
    steps:
      - name: Prepare
        run: |
          platform=${{ matrix.platform }}
          echo "PLATFORM_PAIR=${platform//\//-}" >> $GITHUB_ENV

      - name: Download meta bake definition
        uses: actions/download-artifact@v5
        with:
          name: moat-bake-meta
          path: ${{ runner.temp }}

      - name: Login to Github Packages
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build
        id: bake
        uses: docker/bake-action@v6
        with:
          files: |
            docker-bake.hcl
            cwd://${{ runner.temp }}/moat-bake-meta.json
          targets: image
          set: |
            *.tags=${{ env.MOAT_REGISTRY_IMAGE }}
            *.platform=${{ matrix.platform }}
            *.output=type=image,push-by-digest=true,name-canonical=true,push=true

      - name: Export digest
        run: |
          mkdir -p ${{ runner.temp }}/digests
          digest="${{ fromJSON(steps.bake.outputs.metadata).image['containerimage.digest'] }}"
          touch "${{ runner.temp }}/digests/${digest#sha256:}"

      - name: Upload digest
        uses: actions/upload-artifact@v4
        with:
          name: moat-digests-${{ env.PLATFORM_PAIR }}
          path: ${{ runner.temp }}/digests/*
          if-no-files-found: error
          retention-days: 1

  moat-merge:
    runs-on: ubuntu-latest
    needs:
      - moat-build
    steps:
      - name: Download meta bake definition
        uses: actions/download-artifact@v5
        with:
          name: moat-bake-meta
          path: ${{ runner.temp }}

      - name: Download digests
        uses: actions/download-artifact@v5
        with:
          path: ${{ runner.temp }}/digests
          pattern: moat-digests-*
          merge-multiple: true

      - name: Login to Github Packages
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Create manifest list and push
        working-directory: ${{ runner.temp }}/digests
        run: |
          docker buildx imagetools create $(jq -cr '.target."docker-metadata-action".tags | map(select(startswith("${{ env.MOAT_REGISTRY_IMAGE }}")) | "-t " + .) | join(" ")' ${{ runner.temp }}/moat-bake-meta.json) \
            $(printf '${{ env.MOAT_REGISTRY_IMAGE }}@sha256:%s ' *)

      - name: Inspect image
        run: |
          docker buildx imagetools inspect ${{ env.MOAT_REGISTRY_IMAGE }}:$(jq -r '.target."docker-metadata-action".args.DOCKER_META_VERSION' ${{ runner.temp }}/moat-bake-meta.json)
