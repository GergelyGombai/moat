name: Moat Operator Release

permissions:
  contents: write
  packages: write

on:
  create:
    tags:
      - 'controller/v*'
  workflow_dispatch:

env:
  OPERATOR_IMAGE: ghcr.io/arxignis/moat-operator

jobs:
  docker-build:
    if: ${{ startsWith(github.ref, 'refs/tags/controller/v') }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ${{ env.OPERATOR_IMAGE }}
          tags: |
            type=sha,format=short
            type=match,pattern=controller/v(\d+\.\d+\.\d+),group=1
            type=match,pattern=controller/v(\d+\.\d+),group=1
            type=match,pattern=controller/v(\d+),group=1
            type=raw,value=${{ github.ref_name }}
            type=raw,value=latest

      - name: Login to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push image
        uses: docker/build-push-action@v5
        with:
          context: ./moat-operator
          file: ./moat-operator/Dockerfile
          push: true
          platforms: linux/amd64,linux/arm64
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

  build-artifacts:
    if: ${{ startsWith(github.ref, 'refs/tags/controller/v') }}
    needs: docker-build
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - goos: linux
            goarch: amd64
          - goos: linux
            goarch: arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'

      - name: Build binaries
        env:
          CGO_ENABLED: 0
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        working-directory: ./moat-operator
        run: |
          go build -ldflags="-s -w" -o dist/moat-operator-${GOOS}-${GOARCH}

      - name: Archive binary
        working-directory: ./moat-operator/dist
        run: |
          tar czf moat-operator-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz moat-operator-${{ matrix.goos }}-${{ matrix.goarch }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: moat-operator-${{ matrix.goos }}-${{ matrix.goarch }}
          path: moat-operator/dist/moat-operator-${{ matrix.goos }}-${{ matrix.goarch }}.tar.gz

  publish-release:
    needs: build-artifacts
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: release-artifacts

      - name: Create release
        uses: softprops/action-gh-release@v2.2.1
        with:
          draft: true
          discussion_category_name: Releases
          generate_release_notes: true
          files: release-artifacts/**
          make_latest: false
